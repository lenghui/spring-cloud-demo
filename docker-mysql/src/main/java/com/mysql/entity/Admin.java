package com.mysql.entity;

import java.io.Serializable;
import java.util.Date;

/**
 * Model class of 管理员表.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Admin implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** id. */
	private Integer id;

	/** 用户姓名. */
	private String userName;

	/** 密码. */
	private String passwd;

	/** 创建时间. */
	private Date createTime;

	/**
	 * Constructor.
	 */
	public Admin() {
	}

	/**
	 * Set the id.
	 * 
	 * @param id
	 *            id
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * Get the id.
	 * 
	 * @return id
	 */
	public Integer getId() {
		return this.id;
	}

	/**
	 * Set the 用户姓名.
	 * 
	 * @param userName
	 *            用户姓名
	 */
	public void setUserName(String userName) {
		this.userName = userName;
	}

	/**
	 * Get the 用户姓名.
	 * 
	 * @return 用户姓名
	 */
	public String getUserName() {
		return this.userName;
	}

	/**
	 * Set the 密码.
	 * 
	 * @param passwd
	 *            密码
	 */
	public void setPasswd(String passwd) {
		this.passwd = passwd;
	}

	/**
	 * Get the 密码.
	 * 
	 * @return 密码
	 */
	public String getPasswd() {
		return this.passwd;
	}

	/**
	 * Set the 创建时间.
	 * 
	 * @param createTime
	 *            创建时间
	 */
	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	/**
	 * Get the 创建时间.
	 * 
	 * @return 创建时间
	 */
	public Date getCreateTime() {
		return this.createTime;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Admin other = (Admin) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

}
